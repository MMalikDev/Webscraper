version: "3.8"
name: crawler

networks:
  proxy:
    name: ${NETWORK_NAME:-proxy}
    external: true

volumes:
  database_data:
  dashboard_data:
  dashboard_config:

configs:
  pgpass:
    content: postgres:5432:${DB_NAME}:${DB_USERNAME}:${DB_PASSWORD}
  servers.json:
    content: |
      {
        "Servers": {
          "1": {
            "Group": "Servers",
            "Name": "Postgres",
            "Host": "postgres",
            "Port": 5432,
            "MaintenanceDB": "${DB_NAME}",
            "Username": "${DB_USERNAME}",
            "PassFile": "/pgpass",
            "SSLMode": "prefer"
          }
        }
      }

services:
  python:
    build: $PYTHON_IMAGE
    image: code_py
    container_name: python

    depends_on:
      - postgres

    environment:
      THIRD_PARTY_LOGS: $THIRD_PARTY_LOGS
      LOG_LEVEL: $LOG_LEVEL

      WEBSITE_SETTINGS_PATH: $WEBSITE_SETTINGS_PATH
      DATABASE_URI: $DATABASE_URI

    networks:
      proxy:

  postgres:
    image: postgres:16-bookworm
    container_name: postgres
    restart: always

    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD

    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      proxy:

  pgadmin4:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    restart: always

    environment:
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_DEFAULT_EMAIL: $ADMIN_EMAIL
      PGADMIN_DEFAULT_PASSWORD: $ADMIN_PASSWORD

    volumes:
      - dashboard_data:/var/lib/pgadmin

    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

    networks:
      proxy:

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.dashboard.loadbalancer.server.port=80"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard.${DOMAIN:-localhost}`)"
